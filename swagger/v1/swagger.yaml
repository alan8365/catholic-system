---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/auth/login":
    post:
      summary: login authentication
      tags:
      - Auth
      parameters: []
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
            examples:
              admin:
                summary: Admin login
                value:
                  username: admin
                  password: "!123abc"
              basic:
                summary: Basic login
                value:
                  username: basic
                  password: abc123!
  "/api/households":
    get:
      summary: list households
      tags:
      - Households
      security:
      - Bearer: {}
      parameters:
      - name: any_field
        in: query
        schema:
          type: string
          description: aaa
          require: false
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
    post:
      summary: create household
      tags:
      - Households
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: Created
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              required:
              - home_number
            examples:
              test_user:
                summary: Test user create
                value:
                  home_number: TT123
                  head_of_household_id: '55866'
  "/api/households/{_home_number}":
    parameters:
    - name: _home_number
      in: path
      description: _home_number
      required: true
      schema:
        type: string
    get:
      summary: show household
      tags:
      - Households
      security:
      - Bearer: {}
      responses:
        '200':
          description: successful
        '404':
          description: Not Found
    patch:
      summary: update household
      tags:
      - Households
      security:
      - Bearer: {}
      parameters: []
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
            examples:
              test home number change:
                summary: Test household update
                value:
                  home_number: TT521
    delete:
      summary: delete household
      tags:
      - Households
      security:
      - Bearer: {}
      responses:
        '204':
          description: successful
        '403':
          description: successful
  "/api/parishioners":
    get:
      summary: list parishioners
      tags:
      - Parishioner
      security:
      - Bearer: {}
      parameters:
      - name: any_field
        in: query
        schema:
          type: string
          require: false
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
    post:
      summary: create parishioner
      tags:
      - Parishioner
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: Created
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              required:
              - name
              - gender
              - birth_at
            examples:
              test parishioner:
                summary: Test parishioner create
                value:
                  name: 周男人
                  gender: 男
                  birth_at: '1990-01-01'
                  postal_code: '433'
                  address: 彰化縣田尾鄉福德巷359號
                  photo_url: https://www.secmenu.com/apps/words/www/img/h/fb4a7cf15233d259a0fb0f724fa99f42.png
                  father: ''
                  mother: ''
                  spouse: ''
                  father_id:
                  mother_id:
                  spouse_id:
                  home_phone: '12512515'
                  mobile_phone: '09123124512'
                  nationality: 越南
                  profession: 醫生
                  company_name: 恐龍牙醫診所
                  comment: 測試用範例教友
  "/api/parishioners/{_id}":
    parameters:
    - name: _id
      in: path
      description: _id
      required: true
      schema:
        type: string
    get:
      summary: show parishioner
      tags:
      - Parishioner
      security:
      - Bearer: {}
      responses:
        '200':
          description: successful
        '404':
          description: Not Found
    patch:
      summary: update parishioner
      tags:
      - Parishioner
      security:
      - Bearer: {}
      parameters: []
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
            examples:
              test name change:
                summary: Test parishioner update
                value:
                  name: 台灣偉人
                  photo_url: ''
    delete:
      summary: delete parishioner
      tags:
      - Parishioner
      security:
      - Bearer: {}
      responses:
        '204':
          description: successful
        '403':
          description: successful
        '404':
          description: User not found
  "/api/users":
    get:
      summary: list users
      tags:
      - User
      security:
      - Bearer: {}
      parameters:
      - name: any_field
        in: query
        schema:
          type: string
          description: aaa
          require: false
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
    post:
      summary: create user
      tags:
      - User
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: Created
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              required:
              - name
              - username
              - password
            examples:
              test_user:
                summary: Test user create
                value:
                  name: 測試二號
                  username: test2
                  password: test123
                  comment: 測試用使用者
                  is_admin: false
                  is_modulator: true
  "/api/users/{_username}":
    parameters:
    - name: _username
      in: path
      description: _username
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - User
      security:
      - Bearer: {}
      responses:
        '200':
          description: successful
        '404':
          description: Not Found
    patch:
      summary: update user
      tags:
      - User
      security:
      - Bearer: {}
      parameters: []
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
            examples:
              test name change:
                summary: Test user update
                value:
                  name: new1
                  is_admin: true
                  is_modulator: false
    put:
      summary: update user
      tags:
      - User
      security:
      - Bearer: {}
      parameters: []
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                comment:
                  type: string
                is_admin:
                  type: string
                  format: binary
                is_modulator:
                  type: string
                  format: binary
              required:
              - name
              - password
            examples:
              test put change:
                summary: Test user update in put method
                value:
                  name: 測試二號
                  username: test2
                  password: test123
                  comment: 測試用使用者
                  is_admin: false
                  is_modulator: true
    delete:
      summary: delete user
      tags:
      - User
      security:
      - Bearer: {}
      responses:
        '204':
          description: successful
        '403':
          description: successful
        '404':
          description: User not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 0.0.0.0:3000
components:
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: authorization
      in: header
