---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/auth/login":
    post:
      summary: login authentication
      tags:
      - Auth
      parameters: []
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
            examples:
              admin:
                summary: Admin login
                value:
                  username: admin
                  password: "!123abc"
              basic:
                summary: Basic login
                value:
                  username: basic
                  password: abc123!
  "/api/users":
    get:
      summary: list users
      tags:
      - User
      security:
      - Bearer: {}
      parameters:
      - name: any_field
        in: query
        schema:
          type: string
          description: aaa
          require: false
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
    post:
      summary: create user
      tags:
      - User
      security:
      - Bearer: {}
      parameters: []
      responses:
        '201':
          description: Created
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
              required:
              - name
              - username
              - password
            examples:
              test_user:
                summary: Test user create
                value:
                  name: 測試二號
                  username: test2
                  password: test123
                  comment: 測試用使用者
                  is_admin: false
                  is_modulator: true
  "/api/users/{_username}":
    parameters:
    - name: _username
      in: path
      description: _username
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - User
      security:
      - Bearer: {}
      responses:
        '200':
          description: successful
        '404':
          description: Not Found
    patch:
      summary: update user
      tags:
      - User
      security:
      - Bearer: {}
      parameters: []
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
    put:
      summary: update user
      tags:
      - User
      security:
      - Bearer: {}
      parameters: []
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                comment:
                  type: string
                is_admin:
                  type: string
                  format: binary
                is_modulator:
                  type: string
                  format: binary
              required:
              - name
              - password
    delete:
      summary: delete user
      tags:
      - User
      security:
      - Bearer: {}
      responses:
        '204':
          description: successful
        '403':
          description: successful
        '404':
          description: User not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 0.0.0.0:3000
components:
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: authorization
      in: header
